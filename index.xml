<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>neuromantic</title>
    <link>https://liliilli.github.io/</link>
    <description>Recent content on neuromantic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 13 Aug 2020 10:04:36 +0900</lastBuildDate>
    
	<atom:link href="https://liliilli.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust＋Winapiで窓を生成してみた</title>
      <link>https://liliilli.github.io/posts/rust_winapi_memo/</link>
      <pubDate>Thu, 13 Aug 2020 10:04:36 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/rust_winapi_memo/</guid>
      <description>暇つぶしでRustとwinapi crateを使って、窓を生成してイベントメッセージを処理するルーチンを作ってみました。実はdinput8とx</description>
    </item>
    
    <item>
      <title>AMD GCNアーキテクチャ文書を読んでメモ</title>
      <link>https://liliilli.github.io/posts/gcn_architecture_crash/</link>
      <pubDate>Fri, 19 Jun 2020 12:16:09 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/gcn_architecture_crash/</guid>
      <description>用語 略語 説明 VS Vertex Shader PS Pixel Shader (Fragment Shader) VLIW Very Long Instruction Word FLOPS FLoating point Operations Per Second GCN Graphics Core Next CU Compute Unit EU Export Unit ISA Instruction Set Architecture SIMD Single Instruction Multiple Data ALU Arithmetic Logic Unit AGU Address Generation Unit SALU Scalar Arithmetic Logic Unit VALU Vector Arithmetic Logic Unit APU Accelated Processing Unit PC Program Counter IB</description>
    </item>
    
    <item>
      <title>最近簡単に読んだポスト</title>
      <link>https://liliilli.github.io/posts/week25_2020/</link>
      <pubDate>Fri, 19 Jun 2020 11:39:40 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/week25_2020/</guid>
      <description>Avoid double negation, unless&amp;hellip; !!x == xのような構文を使わないこと。代わりにenabledに終わる（何かが有効化されたか？）ように関数またはフラグなどを作って渡すこと</description>
    </item>
    
    <item>
      <title>Low-level shader optimization for next-gen and D3D11のメモ</title>
      <link>https://liliilli.github.io/posts/shader_opti_memo_2/</link>
      <pubDate>Thu, 18 Jun 2020 10:27:48 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/shader_opti_memo_2/</guid>
      <description>メモの基になる原文は2014年GDCで発表されたもので、翻訳ミスによる間違いがある可能性があります。また、GCN（AMD）アーキテクチャの重</description>
    </item>
    
    <item>
      <title>SFINAEの活用、ざっくりメモ</title>
      <link>https://liliilli.github.io/posts/sfinae_afaid/</link>
      <pubDate>Wed, 17 Jun 2020 19:15:18 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/sfinae_afaid/</guid>
      <description>SFINAEとは SFINAEとはSubstitution Failure is not an error（SFINAE)の略語として、テンプレートパラメータの一致しないテ</description>
    </item>
    
    <item>
      <title>Low Level Thinking in High Shader Languages</title>
      <link>https://liliilli.github.io/posts/shader_opti_memo/</link>
      <pubDate>Wed, 17 Jun 2020 12:00:15 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/shader_opti_memo/</guid>
      <description>これは参照項目のGDCのリンクを読んで適当にメモしたものです。詳しくは参照のリンクをご覧ください。 Goal of this presentation ローレベル思考はいまだに有効である</description>
    </item>
    
    <item>
      <title>DirectInput8 導入メモ</title>
      <link>https://liliilli.github.io/posts/dinput8/</link>
      <pubDate>Sat, 25 Apr 2020 13:28:07 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/dinput8/</guid>
      <description>https://en.wikipedia.org/wiki/DirectInput https://bell0bytes.eu/directinput/ https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ee416842(v=vs.85)?redirectedfrom=MSDN https://docs.microsoft.com/ko-kr/windows/win32/xinput/xinput-and-directinput?redirectedfrom=MSDN DirectInputとは DirectInputは、キーボード、マウス、そして各種のコントローラーを含んでほぼ同一な挙動制御をサポー</description>
    </item>
    
    <item>
      <title>TLSF Allocatorを作ってみた</title>
      <link>https://liliilli.github.io/posts/tlsf_basic/</link>
      <pubDate>Sun, 15 Mar 2020 19:13:14 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/tlsf_basic/</guid>
      <description>TLSFとは何なのか http://www.gii.upv.es/tlsf/ http://www.gii.upv.es/tlsf/files/ecrts04_tlsf.pdf https://www.researchgate.net/publication/234785757_A_comparison_of_memory_allocators_for_real-time_applications TLSF（Two-Level Segregate Fit）は、リアルタイムで要求される速度、安定性、決定性（Deterministic</description>
    </item>
    
    <item>
      <title>行列変数のネーミングについて</title>
      <link>https://liliilli.github.io/posts/matrix_name/</link>
      <pubDate>Fri, 13 Mar 2020 13:11:47 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/matrix_name/</guid>
      <description>https://www.sebastiansylvan.com/post/matrix_naming_convention/ D3Dスタイル（Row-Major、左から右へ演算していくスタイル）でやると、 vector4_t transformed_point = point * M * A; が普通だけど、このままじゃ後でまた見る時に何</description>
    </item>
    
    <item>
      <title>自分でやるDyのCMakeListsファイル説明</title>
      <link>https://liliilli.github.io/posts/dy_cmake/</link>
      <pubDate>Sun, 08 Mar 2020 11:48:19 +0900</pubDate>
      
      <guid>https://liliilli.github.io/posts/dy_cmake/</guid>
      <description>はじめに 自分の個人プロジェクトのDyという、ゲームエンジンプロジェクトがあって、たまに時間がある時開発をしています。ですけど今は表じゃなく裏</description>
    </item>
    
  </channel>
</rss>